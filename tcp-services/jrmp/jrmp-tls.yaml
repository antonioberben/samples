apiVersion: v1
kind: Service
metadata:
  name: jrmp-server
  namespace: demo-tls
  labels:
    app: jrmp-server
spec:
  type: LoadBalancer
  selector:
    app: jrmp-server
  ports:
  - name: tcp
    protocol: TCP
    port: 1100
    targetPort: 1100
  - name: tcp-registry
    protocol: TCP
    port: 1099
    targetPort:  1099
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jrmp-server
  namespace: demo-tls
  labels:
    app: jrmp-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jrmp-server
  template:
    metadata:
      labels:
        app: jrmp-server
    spec:
      containers:
      - name: jrmp-server
        image: antonioberben/jrmp-server:0.9.0
        imagePullPolicy: Always
        ports:
        - containerPort: 1100
        - containerPort: 1099
        env:
        - name: "RMI_HOST"
          value: "jrmp-server.demo-tls.svc.cluster.local"
        - name: TLS_ENABLED
          value: "enabled"
        - name: KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keystore-password 
              key: password
        - name: P12_CERT
          value: "/app/security/server.p12"
        - name: KEYSTORE_PATH
          value: "/app/security/keystore.jks"
        - name: RMI_REGISTRY_PORT
          value: "1099"
        - name: RMI_SERVER_PORT
          value: "1100"
        volumeMounts:
        - name: keystore-volume
          mountPath: "/app/security"
      volumes:
      - name: keystore-volume
        secret:
          secretName: server.p12
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jrmp-client
  namespace: demo-tls
  labels:
    app: jrmp-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jrmp-client
  template:
    metadata:
      labels:
        app: jrmp-client
    spec:
      containers:
      - name: jrmp-client
        image: antonioberben/jrmp-client:0.9.0
        imagePullPolicy: Always
        env:
        - name: "RMI_HOST"
          value: "jrmp-server.demo-tls.svc.cluster.local"
        - name: "TLS_ENABLED"
          value: "enabled"
        - name: "CERTIFICATE_PATH"
          value: "/app/security/server.crt"
        - name: "TRUSTSTORE_PATH"
          value: "/app/security/truststore.jks"
        - name: "TRUSTSTORE_PASSWORD"      
          valueFrom:
            secretKeyRef:
              name: truststore-password
              key: password
        volumeMounts:
        - name: certificate-volume
          mountPath: "/app/security"
      volumes:
      - name: certificate-volume
        secret:
          secretName: certificate-secret